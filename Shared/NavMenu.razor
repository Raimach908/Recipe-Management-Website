@inherits LayoutComponentBase
@inject IUserService UserService
@inject SessionService SessionService
@inject NavigationManager NavigationManager

<link rel="stylesheet" href="css/nav.css" />
<!-- Bootstrap CSS -->
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">

<!-- Bootstrap JS -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

<!-- Top Info Bar -->
<div class="top-bar py-2">
    <div class="container-fluid d-flex justify-content-between align-items-center">
        <div class="d-flex align-items-center">
            <span class="text-white me-3">
                <i class="fas fa-phone-alt"></i> Call: 888-654-3210
            </span>
        </div>
        <div class="d-flex align-items-center">
            <a href="/login" class="text-white text-decoration-none me-3">Sign in</a>
            <a href="javascript:void(0)" class="text-white text-decoration-none me-3" @onclick="Logout">Logout</a>
            <a href="/profile" class="text-white text-decoration-none me-3">Account</a>
            <a href="/cart" class="text-white text-decoration-none">items in cart | $0.00</a>
        </div>
    </div>
</div>

<!-- Navbar -->
<nav class="navbar navbar-expand-lg" style="background-color: white;">
    <div class="container-fluid" style="margin-top: 22px;">
        <!-- Logo -->
        <a class="navbar-brand" href="/">
            <img src="Images/logo1.jpg" alt="Culinary Vault Logo" width="34" height="34" class="rounded-circle" style="margin-top: 0px;">
            <span style="font-family: 'Georgia', serif; font-weight: bold; color: #b6542d;">
                Recipe Vault
            </span>
        </a>

        <!-- Navbar Toggler -->
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon" style="color: #b6542d;"></span>
        </button>

        <!-- Navbar Links -->
        <div class="collapse navbar-collapse justify-content-center" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" href="/" style="color: #b6542d;"></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/" style="color: #b6542d;">Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/menu" style="color: #b6542d;">Menu</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/shop" style="color: #b6542d;">Shop</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/recipeOptions" style="color: #b6542d;">Recipes</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/features" style="color: #b6542d;">Features</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/about" style="color: #b6542d;">About Us</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/contact" style="color: #b6542d;">Contact</a>
                </li>
            </ul>
        </div>
    </div>
</nav>

@code {
    private bool IsUserLoggedIn => loggedInUser != null;
    private dynamic? loggedInUser;
    private bool hasInitialized = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !hasInitialized)
        {
            // Retrieve the logged-in user from the session after the initial render
            loggedInUser = await SessionService.GetSession<dynamic>("LoggedInUser");

            if (loggedInUser != null)
            {
                Console.WriteLine($"Logged-in User: {loggedInUser}");
            }
            else
            {
                Console.WriteLine("No user is logged in.");
            }
            Console.WriteLine($"Session Retrieved: {loggedInUser?.Email ?? "null"}");

            hasInitialized = true;

            // Trigger UI refresh
            StateHasChanged();
        }
    }

    private async Task Logout()
    {
        // Clear the session and navigate to the login page
        await SessionService.ClearSession("LoggedInUser");
        loggedInUser = null; // Clear local user state
        NavigationManager.NavigateTo("/login");
    }
}
