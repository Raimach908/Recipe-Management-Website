@inject NavigationManager NavigationManager
@inject SessionService SessionService

<div class="row justify-content-center">
    <div class="col-md-6">
        <br />
        <h2 class="text-center" style="color: #b6542d; font-weight: bold;">Choose Your Role</h2>
        <p class="text-center mb-4">Please select whether you are an Admin or a User to proceed.</p>
        <div class="text-center">
            <button class="btn btn-primary btn-lg me-3" style="background-color: #b6542d;" @onclick="SelectAdmin">
                Admin
            </button>
            <button class="btn btn-success btn-lg" style="background-color: #28a745;" @onclick="GoToUserLogin">
                User
            </button>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int RecipeId { get; set; } // Pass the RecipeId from the parent component

    [Parameter]
    public EventCallback OnAdminSelected { get; set; }

    private async Task SelectAdmin()
    {
        var sessionAdmin = await SessionService.GetSession<User>("LoggedInAdmin");

        if (sessionAdmin != null)
        {
            // Navigate to user recipe details page
            NavigationManager.NavigateTo($"/recipeDetails/{RecipeId}");
        }
        else
        {
            // Invoke the callback to signal admin selection
            await OnAdminSelected.InvokeAsync();
        }
    }

    private async Task GoToUserLogin()
    {
        // Check if the user is logged in
        var sessionUser = await SessionService.GetSession<User>("LoggedInUser");

        if (sessionUser != null)
        {
            // Navigate to user recipe details page
            NavigationManager.NavigateTo($"/recipeDetailsUser/{RecipeId}");
        }
        else
        {
            // Navigate to login page if not logged in
            NavigationManager.NavigateTo("/login");
        }
    }
}
