@page "/Cart"
@inject CartService CartService
@inject SessionService SessionService
@inject NavigationManager NavigationManager

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" />

<div class="container mt-5">
    <div class="card shadow-sm" style="border: none;">
        <div class="card-header text-white text-center" style="background-color: #b6542d;">
            <h2>Your Cart</h2>
        </div>
        <div class="card-body">
            @if (cartItems != null && cartItems.Any())
            {
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th style="color: #b6542d;">Recipe</th>
                            <th style="color: #b6542d;">Quantity</th>
                            <th style="color: #b6542d;">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in cartItems)
                        {
                            <tr>
                                <td style="vertical-align: middle;">@item.RecipeName</td>
                                <td style="vertical-align: middle;">@item.Quantity</td>
                                <td>
                                    <button class="btn btn-danger btn-sm" @onclick="() => RemoveFromCart(item.RecipeId, item.RecipeName)">
                                        <i class="fas fa-trash-alt"></i> Remove
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p class="text-center text-muted" style="font-size: 1.2rem;">Your cart is empty.</p>
            }

            @if (!string.IsNullOrEmpty(RemoveMessage))
            {
                <div class="alert alert-success mt-3">@RemoveMessage</div>
            }
        </div>
    </div>
</div>

<style>
    table th {
        font-weight: bold;
        font-size: 1.1rem;
        border-bottom: 2px solid #b6542d !important;
    }

    table td {
        font-size: 1rem;
    }

    .btn-danger {
        background-color: #b6542d;
        border: none;
    }

        .btn-danger:hover {
            background-color: #933a1f;
        }
</style>

@code {
    private IEnumerable<CartItem> cartItems = new List<CartItem>();
    private string RemoveMessage;

    protected override async Task OnInitializedAsync()
    {
        var sessionUser = await SessionService.GetSession<User>("LoggedInUser");

        if (sessionUser != null)
        {
            cartItems = CartService.GetCartItems(sessionUser.Email);
        }
        else
        {
            NavigationManager.NavigateTo("/login");
        }
    }

    private async Task RemoveFromCart(int recipeId, string recipeName)
    {
        var sessionUser = await SessionService.GetSession<User>("LoggedInUser");

        if (sessionUser != null)
        {
            CartService.RemoveFromCart(sessionUser.Email, recipeId);
            cartItems = CartService.GetCartItems(sessionUser.Email); // Refresh cart items

            // Display removal confirmation message
            RemoveMessage = $"The recipe '{recipeName}' has been removed from your cart.";
        }
    }
}
